{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": ["prettier", "airbnb", "airbnb/hooks", "plugin:@typescript-eslint/recommended", "plugin:import/typescript"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "jsx": "never",
            "ts": "never",
            "tsx": "never"
          }
        ],
        "indent": "off",
        "jsx-a11y/tabindex-no-positive": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        "jsx-a11y/no-noninteractive-tabindex": "off",
        "react/require-default-props": "off",
        "eslint-disable-next-line": "off",
        "function-paren-newline": "off",
        "react/jsx-curly-newline": "off",
        "no-undef": "off",
        "no-useless-constructor": "off",
        "object-curly-newline": ["error", { "consistent": true }],
        "max-len": ["error", { "code": 140, "ignorePattern": "^import\\s.+\\sfrom\\s.+;$" }],
        "react/jsx-filename-extension": "off",
        "react/jsx-one-expression-per-line": "off",
        "react/jsx-wrap-multilines": ["error", { "declaration": false, "assignment": false }],
        "react/function-component-definition": [2, { "namedComponents": "arrow-function" }],
        "react/react-in-jsx-scope": "off",
        "no-shadow": "off",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/no-shadow": "error",
        "operator-linebreak": ["error", "before", { "overrides": { "=": "ignore", "||": "ignore", "&&": "ignore", "??": "ignore" } }],
        "no-restricted-imports": [
          "error",
          {
            "name": "i18next",
            "importNames": ["t"],
            "message": "Use: 'import { useTranslation } from \"react-i18next\"' instead."
          },
          {
            "name": "antd",
            "importNames": ["message", "notification"],
            "message": "Use: 'import { useNotificationService } from \"notification-service-provider\"' instead."
          }
        ],
        "no-confusing-arrow": "off",
        "comma-spacing": "off", //Using the typescript-eslint rule instead
        "comma-dangle": [
          "error",
          {
            "arrays": "always-multiline",
            "objects": "only-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "functions": "only-multiline"
          }
        ],
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": ["**/*{.,_}{test,spec}.{ts,tsx}", "tests/**/*", "vite.config.ts"],
            "optionalDependencies": false
          }
        ],
        "react-hooks/exhaustive-deps": "off",
        "implicit-arrow-linebreak": ["off"],
        "no-restricted-syntax": [
          "error",
          {
            "selector": "Literal[raw=/X-Hasura-Role/i]",
            "message": "Headers 'X-Hasura-Role' is not allowed. Use Headers.Role (enum) instead"
          }
        ]
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "ignorePatterns": ["src/generated/**/*"],
  "plugins": ["react", "react-hooks", "@typescript-eslint", "prettier"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      },
      "react": {
        "version": "detect"
      }
    }
  }
}
